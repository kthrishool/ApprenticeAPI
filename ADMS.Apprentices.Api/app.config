<?xml version="1.0"?>
<configuration>
	<configSections>
		<section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false"/>
		<section name="adms.typeMapper" type="ADMS.Services.Infrastructure.Core.Configuration.TypeMapperSection, ADMS.Services.Infrastructure.Core"/>
		<section name="adms.authorizationConfiguration" type="ADMS.Infrastructure.Security.Config.AuthorizationConfigurationSection, ADMS.Infrastructure.Security"/>
		<section name="adms.webApiClient" type="ADMS.Services.Infrastructure.WebApiClient.Configuration.WebApiClientSection, ADMS.Services.Infrastructure.WebApiClient"/>
		<section name="adms.swagger" type="ADMS.Services.Infrastructure.WebApi.Documentation.Configuration.SwaggerSection, ADMS.Services.Infrastructure.WebApi"/>
		<section name="adms.webApi" type="ADMS.Services.Infrastructure.WebApi.Configuration.WebApiSection, ADMS.Services.Infrastructure.WebApi"/>
		<section name="adms.serviceRequestMessages" type="ADMS.Services.Infrastructure.Service.Configuration.ServiceRequestMessagesSection, ADMS.Services.Infrastructure.Service"/>
		<section name="adms.requestResponseLog" type="ADMS.Services.Infrastructure.WebApi.Configuration.RequestResponseLogSection, ADMS.Services.Infrastructure.WebApi"/>
		<sectionGroup name="serviceLogging">
			<section name="serviceLog" requirePermission="false" type="ADMS.Services.Infrastructure.Logging.LoggingSectionHandler, ADMS.Services.Infrastructure.Logging"/>
		</sectionGroup>
    </configSections>
  
  <adms.requestResponseLog enabled="true" logAlways="true" logStatusCode="true" logMethod="true" logElapsedTime="true" logRequestUri="true" logRequestOnError="true" logResponseOnError="true"/>
  <adms.swagger tryItOutEnabled="false"/>

    <serviceLogging>
	    <serviceLog level="error" type="ADMS.Services.Infrastructure.Logging.ApiSqlServiceLog, ADMS.Services.Infrastructure.Logging" connectionStringName="EALogging" applicationName="Adms"/>
    </serviceLogging>
	
  <appSettings>
    <add key="aspnet:UseTaskFriendlySynchronizationContext" value="true"/>
    <!-- Active Directory settings-->
    <add key="SupportedContracts" value="EPS5,WDC5,DESA,DESB,NEI5,HLS5,NPA,JAP,CWCA"/>
    <add key="Environment" value="WKS"/>
    <add key="EssUserCacheDurationMinutes" value="15"/>
    <!-- minutes to keep the ess business objects for a user cached -->
    <add key="DirectoryOnlyProfiling" value="false"/>
    <!-- true = directory based only; false = mixed mode -->
    <add key="UserCaching" value="true"/>
    <!-- true = cache user objects; false = do not cahace user objects -->
	<add key="USIOAuth2ClientID" value="b8bd2f19-5e46-4610-ab6b-744e55c9f46c"/>
	<add key="ADMS.Services.ReferenceData.IndirectReferenceDataRepository.BaseUri" value="https://admsapi.edc.hosts.devnetwork/ReferenceData/api"/>
  </appSettings>  
	<adms.typeMapper>
		<types>
			<add name="Authoriser" type="ADMS.Infrastructure.Security.Authorisation.IAuthoriser, ADMS.Infrastructure.Security" mapTo="ADMS.Infrastructure.Security.Authorisation.PrincipalActivityAuthoriser, ADMS.Infrastructure.Security"/>
			<add name="ServiceRequestRepository" type="ADMS.Services.Infrastructure.Service.Interface.IServiceRequestMessageRepository`2, ADMS.Services.Infrastructure.Service" mapTo="ADMS.Services.Infrastructure.Service.Repository.ServiceRequestMessageRepository`2, ADMS.Services.Infrastructure.Service"/>
			<!--<add name="ApprenticeService" type="ADMS.Services.Apprentice.ServiceInterface.IApprenticeService, ADMS.Services.Apprentice" mapTo="ADMS.Services.Apprentice.Service.ApprenticeService, ADMS.Services.Apprentice"/>
			<add name="ApprenticeRepository" type="ADMS.Services.Apprentice.Repository.IApprenticeRepository, ADMS.Services.Apprentice" mapTo="ADMS.Services.Apprentice.Repository.ApprenticeRepository, ADMS.Services.Apprentice"/>-->
			<add name="ADMSWebApiClient" type="ADMS.Services.Infrastructure.Core.Interface.IADMSWebApiClient, ADMS.Services.Infrastructure.Core" mapTo="ADMS.Services.Infrastructure.WebApiClient.ApiClient.ADMSWebApiClient, ADMS.Services.Infrastructure.WebApiClient"/>
			<add name="Logger" type="ADMS.Services.Infrastructure.Core.Interface.ILogger, ADMS.Services.Infrastructure.Core" mapTo="ADMS.Services.Infrastructure.Logging.XLogger, ADMS.Services.Infrastructure.Logging"/>
			<add name="User" type="ADMS.Services.Infrastructure.Core.Interface.IUser, ADMS.Services.Infrastructure.Core" mapTo="ADMS.Services.Infrastructure.Core.Identity.User, ADMS.Services.Infrastructure.Core"/>
			<!--<add name="FeatureToggle" type="ADMS.Infrastructure.Feature.IFeatureToggle,  ADMS.Infrastructure.Feature" mapTo="ADMS.Infrastructure.Feature.FeatureToggleInternal, ADMS.Infrastructure.Feature"/>-->
			<add name="FeatureToggle" type="ADMS.Infrastructure.Feature.IFeatureToggle,  ADMS.Infrastructure.Feature" mapTo="ADMS.Infrastructure.Feature.Testing.AlwaysActiveFeatureToggle, ADMS.Infrastructure.Feature"/>
			<add name="AuditEvent" type="ADMS.Services.Infrastructure.Data.Interface.IAuditEventRepository, ADMS.Services.Infrastructure.Data" mapTo="ADMS.Services.Infrastructure.Data.Repository.AuditEventRepository, ADMS.Services.Infrastructure.Data"/>
			<add name="CacheRepository" type="ADMS.Infrastructure.Cache.ICacheRepository, ADMS.Infrastructure.Cache" mapTo="ADMS.Infrastructure.Cache.MemoryCacheRepository, ADMS.Infrastructure.Cache"/>
			<add name="CacheOutput" type="ADMS.Infrastructure.Cache.ICacheOutput, ADMS.Infrastructure.Cache" mapTo="ADMS.Infrastructure.Cache.MemoryCacheRepository, ADMS.Infrastructure.Cache"/>
		</types>
	</adms.typeMapper>
  <adms.authorizationConfiguration>
    <apiAuthorization authorizationOnly="true"/>
  </adms.authorizationConfiguration>  
  <adms.webApi>
    <unauthorizedException returnDetailedInformation="true"/>
    <internalServerError returnDetailedInformation="true"/>
    <userContext allowSpecifiedDateTime="true" denySpecifiedDateTimeForSystemToSystem="false" denySpecifiedDateTimeForSystemToSystemIfFeatureEnabled="false"/>
    <corsContext allowCors="false"/>
    <jwtSecurity enabled="true" useDefaultAudiences="true" defaultAudienceSuffix=":dev" federationMetadata="https://sts.dev.construction.enet/federationmetadata/2007-06/federationmetadata.xml">
      <audiences>
        <add audience="urn:api:adms:test"/>
        <add audience="urn:vueadms:client:public:localdev"/>
      </audiences>
    </jwtSecurity>
  </adms.webApi>
  <adms.serviceRequestMessages connectionStringName="Db_ConnADW"/>
</configuration>