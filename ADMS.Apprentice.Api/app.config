<?xml version="1.0"?>
<configuration>
  <configSections>
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false"/>
    <section name="adms.typeMapper" type="ADMS.Services.Infrastructure.Core.Configuration.TypeMapperSection, ADMS.Services.Infrastructure.Core"/>
    <section name="adms.authorizationConfiguration" type="ADMS.Infrastructure.Security.Config.AuthorizationConfigurationSection, ADMS.Infrastructure.Security"/>
    <section name="adms.webApiClient" type="ADMS.Services.Infrastructure.WebApiClient.Configuration.WebApiClientSection, ADMS.Services.Infrastructure.WebApiClient"/>
    <section name="employment.swagger" type="ADMS.Services.Infrastructure.WebApi.Documentation.Configuration.SwaggerSection, ADMS.Services.Infrastructure.WebApi"/>
    <section name="adms.webApi" type="ADMS.Services.Infrastructure.WebApi.Configuration.WebApiSection, ADMS.Services.Infrastructure.WebApi"/>
    <section name="adms.serviceRequestMessages" type="ADMS.Services.Infrastructure.Service.Configuration.ServiceRequestMessagesSection, ADMS.Services.Infrastructure.Service"/>
    <section name="adms.requestResponseLog" type="ADMS.Services.Infrastructure.WebApi.Configuration.RequestResponseLogSection, ADMS.Services.Infrastructure.WebApi"/>
  </configSections>
  
  <adms.requestResponseLog enabled="true" logAlways="true" logStatusCode="true" logMethod="true" logElapsedTime="true" logRequestUri="true" logRequestOnError="true" logResponseOnError="true"/>
  <employment.swagger tryItOutEnabled="false"/>
  <appSettings>
    <add key="aspnet:UseTaskFriendlySynchronizationContext" value="true"/>
    <!-- Active Directory settings-->
    <add key="SupportedContracts" value="EPS5,WDC5,DESA,DESB,NEI5,HLS5,NPA,JAP,CWCA"/>
    <add key="Environment" value="WKS"/>
    <add key="EssUserCacheDurationMinutes" value="15"/>
    <!-- minutes to keep the ess business objects for a user cached -->
    <add key="DirectoryOnlyProfiling" value="false"/>
    <!-- true = directory based only; false = mixed mode -->
    <add key="UserCaching" value="true"/>
    <!-- true = cache user objects; false = do not cahace user objects -->
  </appSettings>
  <connectionStrings>
    <add name="Db_ConnADW" connectionString="Data Source=SKSQL01D.dev.construction.enet;Initial Catalog=ADMS;Integrated Security=SSPI" providerName="System.Data.SqlClient"/>
    <add name="EALogging" connectionString="Data Source=SKSQL01D.dev.construction.enet;Initial Catalog=ADMSLogging;Integrated Security=SSPI;Application Name=ADMS.Services.ReferenceData.AspNetCore.WebApi" providerName="System.Data.SqlClient"/>
    <add name="InfrastructureStore" connectionString="Data Source=SKSQL01D.dev.construction.enet; Initial Catalog=ADMS;Integrated Security=True;enlist=false" providerName="System.Data.SqlClient"/>
  </connectionStrings>
  <adms.typeMapper>
    <types>
      <add name="Authoriser" type="ADMS.Infrastructure.Security.Authorisation.IAuthoriser, ADMS.Infrastructure.Security" mapTo="ADMS.Infrastructure.Security.Authorisation.PrincipalActivityAuthoriser, ADMS.Infrastructure.Security"/>
      <add name="ServiceRequestRepository" type="ADMS.Services.Infrastructure.Service.Interface.IServiceRequestMessageRepository`2, ADMS.Services.Infrastructure.Service" mapTo="ADMS.Services.Infrastructure.Service.Repository.ServiceRequestMessageRepository`2, ADMS.Services.Infrastructure.Service"/>
      <add name="ADMSWebApiClient" type="ADMS.Services.Infrastructure.Core.Interface.IADMSWebApiClient, ADMS.Services.Infrastructure.Core" mapTo="ADMS.Services.Infrastructure.WebApiClient.ApiClient.ADMSWebApiClient, ADMS.Services.Infrastructure.WebApiClient"/>
      <add name="Logger" type="ADMS.Services.Infrastructure.Core.Interface.ILogger, ADMS.Services.Infrastructure.Core" mapTo="ADMS.Services.Infrastructure.Logging.XLogger, ADMS.Services.Infrastructure.Logging"/>
      <add name="User" type="ADMS.Services.Infrastructure.Core.Interface.IUser, ADMS.Services.Infrastructure.Core" mapTo="ADMS.Services.Infrastructure.Core.Identity.User, ADMS.Services.Infrastructure.Core"/>
      <add name="FeatureToggle" type="ADMS.Infrastructure.Feature.IFeatureToggle, ADMS.Infrastructure.Feature" mapTo="ADMS.Infrastructure.Feature.Testing.AlwaysActiveFeatureToggle, ADMS.Infrastructure.Feature" />
      <add name="CacheRepository" type="ADMS.Infrastructure.Cache.ICacheRepository, ADMS.Infrastructure.Cache" mapTo="ADMS.Infrastructure.Cache.MemoryCacheRepository, ADMS.Infrastructure.Cache"/>
      <add name="CacheOutput" type="ADMS.Infrastructure.Cache.ICacheOutput, ADMS.Infrastructure.Cache" mapTo="ADMS.Infrastructure.Cache.MemoryCacheRepository, ADMS.Infrastructure.Cache"/>
    </types>
  </adms.typeMapper>
  <adms.authorizationConfiguration>
    <apiAuthorization authorizationOnly="true"/>
  </adms.authorizationConfiguration>
  <adms.webApiClient allowSpecifiedDateTime="true" throwAggregateException="true" useStaticHttpClient="false" useStaticHttpClientIfFeatureEnabled="false" useTransientHttpClient="false" useTransientHttpClientIfFeatureEnabled="false" usePerRequestCache="false" usePerRequestCacheIfFeatureEnabled="false" useConnectionTimeout="false" useConnectionTimeoutIfFeatureEnabled="false" useConnectionClose="false" useConnectionCloseIfFeatureEnabled="false" useLegacyClientSync="false" useLegacyClientSyncIfFeatureEnabled="false" useLegacyClientAsync="false" useLegacyClientAsyncIfFeatureEnabled="false" denySpecifiedDateTimeForSystemToSystem="false" denySpecifiedDateTimeForSystemToSystemIfFeatureEnabled="false">
    <WebApiSecurity jwtEnabled="false"/>
    <WebApiResources>
      <WebApiResource name="Configuration" uri="" functionalArea="Authorisation">
        <Methods>
          <Method name="Get" uri="/CurrentConfiguration" />
        </Methods>
      </WebApiResource>
    </WebApiResources>
    <FunctionalAreas>
      <FunctionalArea name="Authorisation" host="Dev" url="/Authorisation/api"/>
      <FunctionalArea name="Default" host="Dev" url="/Default/api"/>
    </FunctionalAreas>
    <Hosts>
      <!-- these are handled by the shared config file after localdev -->
      <Host name="localDevRefData" url="http://localhost:17249"/>
      <Host name="Dev" url="http://webapi.edc.hosts.devnetwork/dev"/>
      <Host name="DevX" url="http://webapi.edc.hosts.devnetwork/devx"/>
      <Host name="Test" url="http://webapi.edc.hosts.testnetwork/test"/>
      <Host name="Test1" url="http://webapi.edc.hosts.testnetwork/test1"/>
      <Host name="Test2" url="http://webapi.edc.hosts.testnetwork/test2"/>
      <Host name="Test3" url="http://webapi.edc.hosts.testnetwork/test3"/>
      <Host name="Test4" url="http://webapi.edc.hosts.testnetwork/test4"/>
      <Host name="TestFix" url="http://webapi.edc.hosts.testfixnetwork/TESTFIX"/>
      <Host name="ETestFix" url="http://webapi.testfix.edc.hosts.network/etestfix"/>
      <Host name="PProd" url="http://webapi.pprod.edc.hosts.network"/>
      <Host name="Prod" url="http://webapi.hosts.network"/>
      <Host name="PTrn" url="http://trainingwebapi.pprod.edc.hosts.network"/>
      <Host name="Trn" url="http://trainingwebapi.hosts.network"/>
      <Host name="Lt" url="http://loadtestwebapi.hosts.application.enet"/>
    </Hosts>
  </adms.webApiClient>
  <adms.webApi>
    <unauthorizedException returnDetailedInformation="true"/>
    <internalServerError returnDetailedInformation="true"/>
    <userContext allowSpecifiedDateTime="true" denySpecifiedDateTimeForSystemToSystem="false" denySpecifiedDateTimeForSystemToSystemIfFeatureEnabled="false"/>
    <corsContext allowCors="false"/>
    <jwtSecurity enabled="true" useDefaultAudiences="true" defaultAudienceSuffix=":dev" federationMetadata="https://sts.dev.construction.enet/federationmetadata/2007-06/federationmetadata.xml">
      <audiences>
        <add audience="urn:api:referencedata:dev"/>
        <add audience="urn:localdev"/>
      </audiences>
      <delegatedIssuers>
        <add issuer="urn:iss:localdev" thumbprint="DB85F98B3837287FD98179C92CB8A40FA32A34FF"/>
      </delegatedIssuers>
    </jwtSecurity>
  </adms.webApi>
  <adms.serviceRequestMessages connectionStringName="Db_ConnADW"/>
</configuration>