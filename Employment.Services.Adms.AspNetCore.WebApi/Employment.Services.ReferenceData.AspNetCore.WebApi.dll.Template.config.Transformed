<?xml version="1.0"?>
<configuration>
  <configSections>
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false"/>
    <section name="employment.typeMapper" type="Employment.Services.Infrastructure.Core.Configuration.TypeMapperSection, Employment.Services.Infrastructure.Core"/>
    <section name="employment.authorizationConfiguration" type="Employment.Infrastructure.Security.Config.AuthorizationConfigurationSection, Employment.Infrastructure.Security"/>
    <section name="employment.webApiClient" type="Employment.Services.Infrastructure.WebApiClient.Configuration.WebApiClientSection, Employment.Services.Infrastructure.WebApiClient"/>
    <section name="employment.swagger" type="Employment.Services.Infrastructure.WebApi.Documentation.Configuration.SwaggerSection, Employment.Services.Infrastructure.WebApi"/>
    <section name="employment.webApi" type="Employment.Services.Infrastructure.WebApi.Configuration.WebApiSection, Employment.Services.Infrastructure.WebApi"/>
    <section name="employment.serviceRequestMessages" type="Employment.Services.Infrastructure.Service.Configuration.ServiceRequestMessagesSection, Employment.Services.Infrastructure.Service"/>
    <section name="employment.requestResponseLog" type="Employment.Services.Infrastructure.WebApi.Configuration.RequestResponseLogSection, Employment.Services.Infrastructure.WebApi"/>
    <sectionGroup name="serviceLogging">
      <section name="serviceLog" requirePermission="false" type="Employment.Services.Infrastructure.Logging.LoggingSectionHandler, Employment.Services.Infrastructure.Logging"/>
    </sectionGroup>
  </configSections>
  <employment.requestResponseLog enabled="{%Default.requestResponseLog.enabled%}" logAlways="{%Default.requestResponseLog.logAlways%}"
  	logStatusCode="{%Default.requestResponseLog.logStatusCode%}" logMethod="{%Default.requestResponseLog.logMethod%}"
  	logElapsedTime="{%Default.requestResponseLog.logElapsedTime%}" logRequestUri="{%Default.requestResponseLog.logRequestUri%}"
  	logRequestOnError="{%Default.requestResponseLog.logRequestOnError%}" logResponseOnError="{%Default.requestResponseLog.logResponseOnError%}"/>
  <employment.swagger tryItOutEnabled="false" host="{%Default.Swagger.Host%}"/>
  <serviceLogging>
    <serviceLog level="{%Default.ServiceLogging.Level%}" type="Employment.Services.Infrastructure.Logging.ApiSqlServiceLog, Employment.Services.Infrastructure.Logging" connectionStringName="EALogging" applicationName="ReferenceData"/>
  </serviceLogging>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.LocalDbConnectionFactory, EntityFramework">
      <parameters>
        <parameter value="v11.0"/>
      </parameters>
    </defaultConnectionFactory>
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer"/>
    </providers>
  </entityFramework>
  <appSettings>
      <add key="IgnoreVersionHeader" value="true" />
	  <add key="aspnet:UseTaskFriendlySynchronizationContext" value="true"/>
    <!-- Active Directory settings-->
    <add key="SupportedContracts" value="EPS5,WDC5,DESA,DESB,NEI5,HLS5,NPA,JAP,CWCA"/>
    <add key="Environment" value="{%Default.AppSettings.Environment%}"/>
    <add key="EssUserCacheDurationMinutes" value="15"/>
    <!-- minutes to keep the ess business objects for a user cached -->
    <add key="DirectoryOnlyProfiling" value="false"/>
    <!-- true = directory based only; false = mixed mode -->
    <add key="UserCaching" value="true"/>
    <!-- true = cache user objects; false = do not cahace user objects -->
  </appSettings>
  <connectionStrings>
    <add name="Db_ConnADW" connectionString="Data Source={%Default.ConnectionStrings.ADWServer%};Initial Catalog=ADW;Integrated Security=SSPI"
      providerName="System.Data.SqlClient"/>
    <add name="EALogging" connectionString="Data Source={%Default.ConnectionStrings.EALoggingServer%};Initial Catalog=EALogging;Integrated Security=SSPI"
      providerName="System.Data.SqlClient"/>
    <add name="Db_ESam" connectionString="Data Source={%Default.ConnectionStrings.ESAMServer%};Initial Catalog=ESAM;Integrated Security=True"
      providerName="System.Data.SqlClient"/>
    <add name="EmpDbContext"
      connectionString="Data Source={%Default.ConnectionStrings.EmpServer%};Initial Catalog=Emp;Integrated Security=SSPI;MultipleActiveResultSets=True;"
      providerName="System.Data.SqlClient"/>
    <add name="Igas" connectionString="Data Source={%Default.ConnectionStrings.IgasSearchServer%};Initial Catalog=iGasSearch;Integrated Security=SSPI"
      providerName="System.Data.SqlClient"/>
    <add name="IgasSpatial" connectionString="Data Source={%Default.ConnectionStrings.IgasSearchServer%};Initial Catalog=iGasSpatial;Integrated Security=SSPI"
      providerName="System.Data.SqlClient"/>
    <add name="InfrastructureStore"
      connectionString="Data Source={%Default.ConnectionStrings.InfrastructureStoreServer%};Initial Catalog=InfrastructureStore;Integrated Security=True;enlist=false"
      providerName="System.Data.SqlClient"/>
    <add name="RequestResponse"
      connectionString="Data Source={%Default.ConnectionStrings.EALoggingServer%};Initial Catalog=EALogging;Integrated Security=SSPI;Enlist=false"
      providerName="System.Data.SqlClient"/>
    <add name="RequestResponseRingBuffer"
      connectionString="Data Source={%Default.ConnectionStrings.EALoggingMOServer%};Initial Catalog=EALoggingMO;Integrated Security=SSPI;Enlist=false"
      providerName="System.Data.SqlClient"/>
    {%APIGW.LocalMockDataConnectionStringElement%}
  </connectionStrings>
  <employment.typeMapper>
    <types>
      <add name="Authoriser" type="Employment.Infrastructure.Security.Authorisation.IAuthoriser, Employment.Infrastructure.Security"
        mapTo="Employment.Infrastructure.Security.Authorisation.PrincipalActivityAuthoriser, Employment.Infrastructure.Security"/>
      <add name="ServiceRequestRepository"
        type="Employment.Services.Infrastructure.Service.Interface.IServiceRequestMessageRepository`2, Employment.Services.Infrastructure.Service"
        mapTo="Employment.Services.Infrastructure.Service.Repository.ServiceRequestMessageRepository`2, Employment.Services.Infrastructure.Service"/>
      <add name="ReferenceDataService" type="Employment.Services.ReferenceData.ServiceInterface.IReferenceDataService, Employment.Services.ReferenceData" mapTo="Employment.Services.ReferenceData.Service.ReferenceDataService, Employment.Services.ReferenceData"/>
      <add name="UserService" type="Employment.Services.ReferenceData.ServiceInterface.IUserService, Employment.Services.ReferenceData" mapTo="Employment.Services.ReferenceData.Service.UserService, Employment.Services.ReferenceData"/>
      <add name="ReferenceDataRepository" type="Employment.Services.ReferenceData.Repository.IReferenceDataRepository, Employment.Services.ReferenceData" mapTo="Employment.Services.ReferenceData.Repository.ReferenceDataRepository, Employment.Services.ReferenceData"/>
      <add name="UserRepository" type="Employment.Services.ReferenceData.Repository.IUserRepository, Employment.Services.ReferenceData"
        mapTo="Employment.Services.ReferenceData.Repository.UserRepository, Employment.Services.ReferenceData"/>
      <add name="EmploymentWebApiClient" type="Employment.Services.Infrastructure.Core.Interface.IEmploymentWebApiClient, Employment.Services.Infrastructure.Core" mapTo="Employment.Services.Infrastructure.WebApiClient.ApiClient.EmploymentWebApiClient, Employment.Services.Infrastructure.WebApiClient"/>
      <add name="Logger" type="Employment.Services.Infrastructure.Core.Interface.ILogger, Employment.Services.Infrastructure.Core"
        mapTo="Employment.Services.Infrastructure.Logging.XLogger, Employment.Services.Infrastructure.Logging"/>
      <add name="User" type="Employment.Services.Infrastructure.Core.Interface.IUser, Employment.Services.Infrastructure.Core"
        mapTo="Employment.Services.Infrastructure.Core.Identity.User, Employment.Services.Infrastructure.Core"/>
      <!-- Features -->
      <add name="FeatureToggle" type="Employment.Infrastructure.Feature.IFeatureToggle, Employment.Infrastructure.Feature" mapTo="Employment.Services.ReferenceData.Repository.FeatureToggleWrapper, Employment.Services.ReferenceData"/>
      <add name="FeatureService" type="Employment.Services.ReferenceData.ServiceInterface.IFeatureService, Employment.Services.ReferenceData" mapTo="Employment.Services.ReferenceData.Service.FeatureService, Employment.Services.ReferenceData"/>
      <add name="FeatureRepository" type="Employment.Services.ReferenceData.Repository.IFeatureRepository, Employment.Services.ReferenceData" mapTo="Employment.Services.ReferenceData.Repository.FeatureRepository, Employment.Services.ReferenceData"/>
      <!-- Features -->
      <add name="CustomerService" type="Employment.Services.ReferenceData.ServiceInterface.ICustomerService, Employment.Services.ReferenceData" mapTo="Employment.Services.ReferenceData.Service.CustomerService, Employment.Services.ReferenceData"/>
      <add name="CustomerRepository" type="Employment.Services.ReferenceData.Repository.ICustomerRepository, Employment.Services.ReferenceData" mapTo="Employment.Services.ReferenceData.Repository.CustomerRepository, Employment.Services.ReferenceData"/>
      <add name="CacheRepository" type="Employment.Infrastructure.Cache.ICacheRepository, Employment.Infrastructure.Cache" mapTo="Employment.Infrastructure.Cache.MemoryCacheRepository, Employment.Infrastructure.Cache"/>
      <add name="CacheOutput" type="Employment.Infrastructure.Cache.ICacheOutput, Employment.Infrastructure.Cache" mapTo="Employment.Infrastructure.Cache.MemoryCacheRepository, Employment.Infrastructure.Cache"/>
      <add name="AutocompleteAddress" type="Employment.Services.ReferenceData.ServiceInterface.IIgasService, Employment.Services.ReferenceData" mapTo="Employment.Services.ReferenceData.Service.IgasService, Employment.Services.ReferenceData"/>
      <add name="IgasRepository" type="Employment.Services.ReferenceData.Repository.IIgasRepository, Employment.Services.ReferenceData" mapTo="Employment.Services.ReferenceData.Repository.IgasRepository, Employment.Services.ReferenceData"/>
    </types>
  </employment.typeMapper>
  <employment.authorizationConfiguration>
    <apiAuthorization authorizationOnly="true"/>
  </employment.authorizationConfiguration>
  <employment.webApiClient allowSpecifiedDateTime="{%Default.WebApiClient.allowSpecifiedDateTime%}" throwAggregateException="{%Default.WebApiClient.throwAggregateException%}" usePerRequestCache="{%Default.WebApiClient.usePerRequestCache%}" usePerRequestCacheIfFeatureEnabled="{%Default.WebApiClient.usePerRequestCacheIfFeatureEnabled%}" useConnectionTimeout="{%Default.WebApiClient.useConnectionTimeout%}" useConnectionTimeoutIfFeatureEnabled="{%Default.WebApiClient.useConnectionTimeoutIfFeatureEnabled%}" useConnectionClose="{%Default.WebApiClient.useConnectionClose%}" useConnectionCloseIfFeatureEnabled="{%Default.WebApiClient.useConnectionCloseIfFeatureEnabled%}" denySpecifiedDateTimeForSystemToSystem="{%Default.WebApiClient.denySpecifiedDateTimeForSystemToSystem%}" denySpecifiedDateTimeForSystemToSystemIfFeatureEnabled="{%Default.WebApiClient.denySpecifiedDateTimeForSystemToSystemIfFeatureEnabled%}">
    <WebApiSecurity jwtEnabled="{%Default.jwtEnabled%}">
    </WebApiSecurity>
    <WebApiResources>
      <WebApiResource name="Configuration" uri="" functionalArea="Authorisation">
        <Methods>
          <Method name="Get" uri="/CurrentConfiguration" />
        </Methods>
      </WebApiResource>
    </WebApiResources>
    <FunctionalAreas>
      {%Default.WebApiClient.FunctionalAreas%}
    </FunctionalAreas>
    <Hosts>
      {%Default.WebApiClient.Hosts%}
    </Hosts>
  </employment.webApiClient>
  <employment.webApi>
    <unauthorizedException returnDetailedInformation="{%Default.WebApi.unauthorizedException.returnDetailedInformation%}"/>
    <internalServerError returnDetailedInformation="{%Default.WebApi.internalServerError.returnDetailedInformation%}"/>
    <userContext allowSpecifiedDateTime="{%Default.WebApi.allowSpecifiedDateTime%}"
      denySpecifiedDateTimeForSystemToSystem="{%Default.WebApi.denySpecifiedDateTimeForSystemToSystem%}"
      denySpecifiedDateTimeForSystemToSystemIfFeatureEnabled="{%Default.WebApi.denySpecifiedDateTimeForSystemToSystemIfFeatureEnabled%}"/>
    <corsContext allowCors="false"/>
    <jwtSecurity enabled="{%Default.jwtEnabled%}" federationMetadata="{%Default.WebApi.federationMetadata%}">
      <audiences>
        {%Default.WebApi.Audiences%}
      </audiences>
      <delegatedIssuers>
        {%Default.WebApi.DelegatedIssuers%}
      </delegatedIssuers>
    </jwtSecurity>
  </employment.webApi>
  <employment.serviceRequestMessages connectionStringName="Db_ConnADW"/>
</configuration>