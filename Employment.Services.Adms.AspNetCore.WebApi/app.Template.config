<?xml version="1.0" encoding="utf-8"?>
<configuration xmlns:xdt="http://schemas.microsoft.com/XML-Document-Transform">
  <connectionStrings xdt:Transform="Replace">
    <add name="Db_ConnADW" connectionString="Data Source={%Default.ConnectionStrings.ADWServer%};Initial Catalog=ADW;Integrated Security=SSPI" providerName="System.Data.SqlClient" xdt:Transform="SetAttributes(connectionString)" xdt:Locator="Match(name)" />
    <add name="EALogging" connectionString="Data Source={%Default.ConnectionStrings.EALoggingServer%};Initial Catalog=EALogging;Integrated Security=SSPI" providerName="System.Data.SqlClient" xdt:Transform="SetAttributes(connectionString)" xdt:Locator="Match(name)" />
    <add name="Db_ESam" connectionString="Data Source={%Default.ConnectionStrings.ESAMServer%};Initial Catalog=ESAM;Integrated Security=True" providerName="System.Data.SqlClient" xdt:Transform="SetAttributes(connectionString)" xdt:Locator="Match(name)" />
    <add name="EmpDbContext" connectionString="Data Source={%Default.ConnectionStrings.EmpServer%};Initial Catalog=Emp;Integrated Security=SSPI;MultipleActiveResultSets=True;" providerName="System.Data.SqlClient" xdt:Transform="SetAttributes(connectionString)" xdt:Locator="Match(name)" />
    <add name="Igas" connectionString="Data Source={%Default.ConnectionStrings.IgasSearchServer%};Initial Catalog=iGasSearch;Integrated Security=SSPI" providerName="System.Data.SqlClient" xdt:Transform="SetAttributes(connectionString)" xdt:Locator="Match(name)" />
    <add name="IgasSpatial" connectionString="Data Source={%Default.ConnectionStrings.IgasSearchServer%};Initial Catalog=iGasSpatial;Integrated Security=SSPI" providerName="System.Data.SqlClient" xdt:Transform="SetAttributes(connectionString)" xdt:Locator="Match(name)" />
    <add name="InfrastructureStore" connectionString="Data Source={%Default.ConnectionStrings.InfrastructureStoreServer%};Initial Catalog=InfrastructureStore;Integrated Security=True;enlist=false" providerName="System.Data.SqlClient" xdt:Transform="SetAttributes(connectionString)" xdt:Locator="Match(name)" />
    <add name="RequestResponse" connectionString="Data Source={%Default.ConnectionStrings.EALoggingServer%};Initial Catalog=EALogging;Integrated Security=SSPI;Enlist=false" providerName="System.Data.SqlClient" xdt:Transform="SetAttributes(connectionString)" xdt:Locator="Match(name)" />
    <add name="RequestResponseRingBuffer" connectionString="Data Source={%Default.ConnectionStrings.EALoggingMOServer%};Initial Catalog=EALoggingMO;Integrated Security=SSPI;Enlist=false" providerName="System.Data.SqlClient" xdt:Transform="SetAttributes(connectionString)" xdt:Locator="Match(name)" />
    {%APIGW.LocalMockDataConnectionStringElement%}
  </connectionStrings>
  <appSettings>
    <add key="Public" value="{%APIGW.IsPublic%}" xdt:Transform="SetAttributes(value)" xdt:Locator="Match(key)" />
    <add key="Employment.Services.Adms.IndirectAdmsRepository.BaseUri" value="{%Default.AppSettings.IndirectAdmsRepositoryUri%}" xdt:Transform="SetAttributes(value)" xdt:Locator="Match(key)" />
    <add key="Environment" value="{%Default.AppSettings.Environment%}" xdt:Transform="SetAttributes(value)" xdt:Locator="Match(key)" />
    <add key="DbConn_MF" value="{%Default.AppSettings.DbConn_MF%}" xdt:Transform="SetAttributes(value)" xdt:Locator="Match(key)" />
  </appSettings>
  <employment.swagger tryItOutEnabled="false" host="{%Default.Swagger.Host%}" xdt:Transform="Replace" />
  <employment.webApi>
    <stackTrace returnStackTrace="{%Default.WebApi.stackTrace.returnStackTrace%}" xdt:Transform="Replace" />
    <unauthorizedException returnDetailedInformation="{%Default.WebApi.unauthorizedException.returnDetailedInformation%}" xdt:Transform="Replace" />
    <internalServerError returnDetailedInformation="{%Default.WebApi.internalServerError.returnDetailedInformation%}" xdt:Transform="Replace" />
    <userContext allowSpecifiedDateTime="{%Default.WebApi.allowSpecifiedDateTime%}" denySpecifiedDateTimeForSystemToSystem="{%Default.WebApi.denySpecifiedDateTimeForSystemToSystem%}" denySpecifiedDateTimeForSystemToSystemIfFeatureEnabled="{%Default.WebApi.denySpecifiedDateTimeForSystemToSystemIfFeatureEnabled%}" xdt:Transform="Replace" />
    <jwtSecurity xdt:Transform="Replace" enabled="{%Default.jwtEnabled%}" federationMetadata="{%Default.WebApi.federationMetadata%}">
      <audiences>
        {%Default.WebApi.Audiences%}
      </audiences>
      <delegatedIssuers>
        {%Default.WebApi.DelegatedIssuers%}
      </delegatedIssuers>
    </jwtSecurity>
  </employment.webApi>
  <employment.typeMapper>
    <types>
      <add name="UserRepository" type="Employment.Services.Adms.Repository.IUserRepository, Employment.Services.Adms" mapTo="Employment.Services.Adms.Repository.UserRepository, Employment.Services.Adms" xdt:Locator="Match(name)" xdt:Transform="Replace" />
      <add name="ServiceRequestRepository" type="Employment.Services.Infrastructure.Service.Interface.IServiceRequestMessageRepository`2, Employment.Services.Infrastructure.Service" mapTo="Employment.Services.Infrastructure.Service.Repository.ServiceRequestMessageRepository`2, Employment.Services.Infrastructure.Service" xdt:Locator="Match(name)" xdt:Transform="Replace" />
      <add name="Authoriser" type="Employment.Infrastructure.Security.Authorisation.IAuthoriser, Employment.Infrastructure.Security" mapTo="Employment.Infrastructure.Security.Authorisation.PrincipalActivityAuthoriser, Employment.Infrastructure.Security" xdt:Locator="Match(name)" xdt:Transform="Replace" />
      <add name="Logger" type="Employment.Services.Infrastructure.Core.Interface.ILogger, Employment.Services.Infrastructure.Core" mapTo="Employment.Services.Infrastructure.Logging.XLogger, Employment.Services.Infrastructure.Logging" xdt:Locator="Match(name)" xdt:Transform="Replace" />
      <add name="User" type="Employment.Services.Infrastructure.Core.Interface.IUser, Employment.Services.Infrastructure.Core" mapTo="Employment.Services.Infrastructure.Core.Identity.User, Employment.Services.Infrastructure.Core"  xdt:Locator="Match(name)" xdt:Transform="Replace" />
    </types>
  </employment.typeMapper>
  <serviceLogging>
    <serviceLog level="{%Default.ServiceLogging.Level%}" type="Employment.Services.Infrastructure.Logging.ApiSqlServiceLog, Employment.Services.Infrastructure.Logging"  xdt:Transform="SetAttributes(level)" />
  </serviceLogging>

  <employment.requestResponseLog enabled="{%Default.requestResponseLog.enabled%}" logAlways="{%Default.requestResponseLog.logAlways%}" logStatusCode="{%Default.requestResponseLog.logStatusCode%}" logMethod="{%Default.requestResponseLog.logMethod%}" logElapsedTime="{%Default.requestResponseLog.logElapsedTime%}" logRequestUri="{%Default.requestResponseLog.logRequestUri%}" logRequestOnError="{%Default.requestResponseLog.logRequestOnError%}" logResponseOnError="{%Default.requestResponseLog.logResponseOnError%}" xdt:Transform="Replace" />
  <employment.webApiClient 
    allowSpecifiedDateTime="{%Default.WebApiClient.allowSpecifiedDateTime%}" 
    throwAggregateException="{%Default.WebApiClient.throwAggregateException%}" 
    usePerRequestCache="{%Default.WebApiClient.usePerRequestCache%}" 
    usePerRequestCacheIfFeatureEnabled="{%Default.WebApiClient.usePerRequestCacheIfFeatureEnabled%}" 
    useConnectionTimeout="{%Default.WebApiClient.useConnectionTimeout%}" 
    useConnectionTimeoutIfFeatureEnabled="{%Default.WebApiClient.useConnectionTimeoutIfFeatureEnabled%}" 
    useConnectionClose="{%Default.WebApiClient.useConnectionClose%}" 
    useConnectionCloseIfFeatureEnabled="{%Default.WebApiClient.useConnectionCloseIfFeatureEnabled%}" 
    denySpecifiedDateTimeForSystemToSystem="{%Default.WebApiClient.denySpecifiedDateTimeForSystemToSystem%}" 
    denySpecifiedDateTimeForSystemToSystemIfFeatureEnabled="{%Default.WebApiClient.denySpecifiedDateTimeForSystemToSystemIfFeatureEnabled%}" 
    xdt:Transform="SetAttributes(allowSpecifiedDateTime,throwAggregateException,usePerRequestCache,usePerRequestCacheIfFeatureEnabled,useConnectionTimeout,useConnectionTimeoutIfFeatureEnabled,useConnectionClose,useConnectionCloseIfFeatureEnabled,denySpecifiedDateTimeForSystemToSystem,denySpecifiedDateTimeForSystemToSystemIfFeatureEnabled)">
   <WebApiSecurity jwtEnabled="{%Default.jwtEnabled%}" xdt:Transform="Replace" >
   </WebApiSecurity>
   <FunctionalAreas xdt:Transform="Replace" >
      {%Default.WebApiClient.FunctionalAreas%}
    </FunctionalAreas>
    <Hosts xdt:Transform="Replace" >
      {%Default.WebApiClient.Hosts%}
    </Hosts>
  </employment.webApiClient>
</configuration>