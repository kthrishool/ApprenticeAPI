trigger:
  branches:
    include: [ '*' ] # Trigger on all commits in all branches
  tags:
    include: [ 'v*', '*deploy*' ] # Trigger on v* tags and *deploy* tags

parameters:
  - name: environments
    type: object
    default: ['Dev', 'Test', 'LoadTest', 'Staging', 'Test1']

resources:
  repositories:
    - repository: templates
      type: git
      name: ADMS/pipeline-templates
      ref: users/jd3044

    - repository: db-templates
      type: git
      name: 'Database Management/PipelineTemplates'      

variables:
  - template: /Variables/Adms/Deploy_Flag_Variables.yml@templates
  
stages:
  - template: Pipelines/website.yml@templates
    parameters:
      artifactFeed: d5f873fd-aea7-4b0f-956a-08364122d906/c8b90219-fc51-43a0-b803-dfc2d668ad9b
      testFileSpec: '**/*UnitTests*.csproj'      
      calculateCoverage: true
      buildQualityCheckWarnings: true
      buildQualityCheckCodeCoverage: true

  - stage: BuildDatabase
    dependsOn: BuildApplication
    displayName: Build Database
    jobs:
      - template: /Jobs/Build/sqlproj.yml@templates
        parameters:
          artifactName: 'database-drop-folder'
          buildFileSpec: '**/*ADMSApprentice.sqlproj'
          msbuildAdditionalArguments: '-noWarn:SQL71562,SQL71502,SQL71558'

  - ${{ each env in parameters.environments }}:
    - ${{if ne(env, 'Staging')}}:
      - stage: DeployDatabase_${{ env }}
        dependsOn: BuildDatabase
        condition: and(succeeded(), eq(variables['deploy${{ env }}'], 'true'))
        jobs:
        - template: /Jobs/Release/database.yml@db-templates
          parameters:
            dacpacFileSpec: Database.ADMSApprentice.dacpac
            environmentName : ADMSApprentice Database ${{ env }}
            databaseName: ADMSApprentice
            artifactName: 'database-drop-folder'
            targetEnvironment: '${{ env }}'

    - ${{if ne(env, 'Test1')}}:
      - stage: ${{ env }}
        ${{if ne(env, 'Staging')}}:
          dependsOn: DeployDatabase_${{ env }}
        ${{if eq(env, 'Staging')}}:
          dependsOn: BuildDatabase
        condition: and(succeeded(), eq(variables['deploy${{ env }}'], 'true'))
        variables:
            - template: /Variables/Adms/${{ env }}_API_Variables.yml@templates
            - name: admsApplicationName
              value: "apprenticeapi"
            - name: webAppPoolUsername
              value: "$(ApprenticeAPI_ENETDEV)"
            - name: webAppPoolPassword
              value: "$(ApprenticeAPIPassword_ENETDEV)"
            - name: "OurDatabaseSettings.DatabaseConnectionString"
              value: '$(AdmsApprenticeConnectionString)'
            - name: "OurHttpClientSettings.ReferenceDataEndpointBaseUrl"
              value: '$(ReferenceDataEndpointBaseUrl)'
            - name: "OurEnvironmentSettings.SwaggerPrefix"
              value: '$(AdmsApprenticesSwaggerPrefix)'
            - name: "OurEnvironmentSettings.SwaggerPath"
              value: '$(AdmsApprenticesSwaggerPath)'
            - ${{if eq(env, 'Staging')}}:
              - name: "OurUSISettings.USIVerifyDisabled" #Disable the USI verification in staging
                value: true
        jobs:
          - template: Jobs/Release/iiswebapplication.yml@templates
            parameters:
              environmentName: Backend_${{ env }}
              parallelLimit: 100%
              xmlTransformation: false
              xmlVarSubstitution: true
              parentWebsiteName: '$(admsWebsiteName)'
              installDir: $(admsInstallDir)
              takeAppOffline: true
              hostName: ${{ variables.hostName }}
              ${{if ne(env, 'Staging')}}:
                webAppPoolUsername: "$(webAppPoolUsername)"
                webAppPoolPassword: "$(webAppPoolPassword)"
              ${{if eq(env, 'Staging')}}:
                webAppPoolUsername: "$(ApprenticeAPI_GMSASTG)"
              anonymousAuthentication: true
              windowsAuthentication: false
              webApplicationName: '$(admsApplicationName)'      
              listSites: true
        
      - stage: SmokeTest_${{ env }}
        dependsOn: ${{ env }}
        condition: and(succeeded(), eq(variables['deploy${{ env }}'], 'true'))
        variables:
            - template: /Variables/Adms/${{ env }}_API_Variables.yml@templates
            - name: System.Debug
              value: false
        jobs:
          - job: 
            pool: common
            steps:
              - powershell: |
                  $uri = "https://${{variables.hostname}}/apprenticeapi/swagger/default/swagger.json"
                  echo "https://${{variables.hostname}}/apprenticeapi/swagger/index.html"
                  [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
                  Invoke-RestMethod -Uri $uri -Method Get
                displayName: Fetch Swagger